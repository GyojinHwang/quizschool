[
    {
        "_id": 2,
        "작성자": "62fb510233c1c3f33f4f38d5",
        "문제": "심금을 울리다의 심금은?",
        "보기1": "가야금",
        "보기2": "거문고",
        "보기3": "비파",
        "보기4": "월금",
        "정답": "2"
    },
    {
        "_id": 3,
        "작성자": "62fdd669310630441db2ff52",
        "문제": "방글라데시의 수도는?",
        "보기1": "팀부",
        "보기2": "네피도",
        "보기3": "다카",
        "보기4": "비엔티안",
        "정답": "3"
    },
    {
        "_id": 4,
        "작성자": "62fdcd328cf186daee6a1d25",
        "문제": "핵 보유국 숫자는?",
        "보기1": "9",
        "보기2": "5",
        "보기3": "7",
        "보기4": "3",
        "정답": "2"
    }
]

Axios Post 요청 방법
Put도 동일. Delete만 axios.delete로 접근하면 된다.

import { post, put, axios } from 'axios'  
        post( 서버URL
            , 보낼data
            , { config 정보들 ...}
            }.then(res => {
            요쳥결과 처리
        }).catch(err => {
            에러처리
        });
​
​

JSON을 이용하여 객체를 서버에 전송하는 방법
객체 타입의 data를 넣어주고 config에 context-Type을 json타입으로 명시해준다.

        const url = "/question_info";
        const data = {
            'email' : email,
            'pw' : pw
        };
        const config = {"Content-Type": 'application/json'};
        
        post(url, data, config)
            .then(res => {
                // 성공 처리
            }).catch(err => {
                // 에러 처리
                //console.log(err.response.data.message); --> 서버단 에러메세지 출력~
            });